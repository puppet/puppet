# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  UBUNTU_PROVISION = <<SHELL
    sudo apt-get install -q -y git-core ruby1.9.1 ruby1.9.1-dev rubygems1.9.1 irb1.9.1 ri1.9.1 rdoc1.9.1 build-essential libopenssl-ruby1.9.1 libssl-dev zlib1g-dev
    sudo update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby1.9.1 400 --slave /usr/share/man/man1/ruby.1.gz ruby.1.gz /usr/share/man/man1/ruby1.9.1.1.gz --slave   /usr/bin/ri ri /usr/bin/ri1.9.1 --slave /usr/bin/irb irb /usr/bin/irb1.9.1 --slave   /usr/bin/rdoc rdoc /usr/bin/rdoc1.9.1
    sudo update-alternatives --config ruby
    sudo update-alternatives --config gem

    sudo apt-get install -q -y curl
SHELL

  CENTOS_PROVISION = <<SHELL
  sudo yum install -q -y git ruby ruby-devel rubygems curl
  sudo /etc/init.d/iptables stop
SHELL

  BOXEN = {
    "precise" => {
      :box_url => "http://puppet-vagrant-boxes.puppetlabs.com/ubuntu-server-1204-x64-vbox4210-nocm.box",
      :script => UBUNTU_PROVISION
    },

    "centos6" => {
      :box_url => "http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box",
      :script => CENTOS_PROVISION
    }
  }

  HOSTS = {
    :agent1 => { :ip => "192.168.33.10", :box => "precise" },
    :master => { :ip => "192.168.33.12", :box => "centos6" }
  }

  config.vm.provision :shell, :inline => <<SHELL
  echo "#{File.read('acceptance.pub')}" > auth_keys

  sudo mkdir -p /root/.ssh
  sudo mv auth_keys /root/.ssh/authorized_keys
  sudo chown -R root:root /root/.ssh
  sudo chmod 700 /root/.ssh
  sudo chmod 744 /root/.ssh/authorized_keys
  sudo domainname acceptance.vm
  sudo sed -i '/search/d' /etc/resolv.conf
SHELL

  HOSTS.each do |name, conf_values|
    ip = conf_values[:ip]
    box = conf_values[:box]
    box_url = BOXEN[box][:box_url]
    script = BOXEN[box][:script]

    config.vm.define name do |conf|
      conf.vm.box = box
      conf.vm.box_url = box_url

      conf.vm.network :private_network, :ip => ip
      conf.vm.hostname = name.to_s

      conf.vm.provision :shell, :inline => script
      HOSTS.each do |hostname, host_conf|
        conf.vm.provision :shell, :inline => "sudo sed -i '$a#{host_conf[:ip]} #{hostname} #{hostname}.acceptance.vm' /etc/hosts"
      end
    end
  end
end
