require 'puppet/util/anonymous_filelock'

#
# A module that can be mixed in to provide enable/disable support for the agent.
# It would be nice if this module completely encapsulated the details of this
# process; however, it unfortunately relies on the existence of a "lockfile_path" method
# on the class it's being mixed in to.
#
module Puppet::Agent::Disabler
  # Let the daemon run again, freely in the filesystem.
  def enable
    disable_lockfile.unlock

    # This is here for backwards compatibility with versions prior to 2.7.10
    # (see ticket #12844 and comments in the method itself).
    handle_old_lockfile
  end


  # Stop the daemon from making any catalog runs.
  def disable(msg='')
    disable_lockfile.lock(msg)
  end

  def disable_lockfile
    @disable_lockfile ||= Puppet::Util::AnonymousFilelock.new(lockfile_path+".disabled")

    @disable_lockfile
  end

  def disabled?
    disable_lockfile.locked?
  end

  def disable_message
    disable_lockfile.message
  end



  #
  # This method is here for backwards compatibility (see ticket #12844).
  #
  # In puppet versions prior to 2.7.10, there was a single lock file (puppetdlock) that
  # the agent used for two different purposes:
  #
  # 1. If the file exists and contains a pid, then ostensibly there is an agent process
  #    currently running on the system.
  # 2. If the file exists but is empty, then it was most likely generated by a call to
  #    "puppet agent --disable", which is the means for administratively disabling the
  #    agent until further notice.
  #
  # In puppet 2.7.10, the code was improved to be a little more explicit about this
  # distinction; the "--disable/--enable" operations were changed to use a distinct
  # lock file (puppetdlock.disabled), to reduce ambiguity relating to the existence
  # of the file.
  #
  # However, it is possible that a user ran "--disable" with an older version of puppet,
  # and then upgraded.  Therefore we need to try to detect the lock file by the old name.
  # If we find it, we need to see if we can tell why it's there, delete it if possible,
  # and print a warning.
  #
  # (cprice 2012-02-28)
  #
  def handle_old_lockfile
    old_disable_lockfile_path = lockfile_path

    begin
      contents = File.read(old_disable_lockfile_path)
    rescue Errno::ENOENT => err
      # The lock file must not exist, so we don't need to do anything
    else
      case contents
        when /^$/
          # The file is empty.  This almost certainly means that it was created by an old version of puppet, via
          #  puppet agent --disable, so we'll warn and delete it.
          Puppet.warning("Found an agent lock file at path '#{old_disable_lockfile_path}'.  " +
                             "It appears that this lock file was generated by a previous version of puppet, via a call " +
                             "to 'puppet agent --disable'.  Deleting the empty file so that agents will be enabled.")
          File.unlink(old_disable_lockfile_path)
        when /^\d{3,10}$/
          # The file appears to contain a pid.  This indicates that puppet believes an agent is currently running
          #  in another process.  We'll respect that, but issue a warning just in case something else has happened,
          #  so that at least the user knows why "--enable" isn't necessarily guaranteed to actually enable the agent.
          Puppet.warning("Found an agent lock file at path '#{old_disable_lockfile_path}'.  It appears that a puppet " +
                             "agent process is already running (pid #{contents}).  If this is not the case, please remove or rename " +
                             "the file in order to enable a new agent run.")
        else
          # The file exists, and it's not empty... but it does not appear to contain just a pid.  In other words,
          # we have no idea what's going on.  So we'll just print a warning.
          Puppet.warning("Found an agent lock file at path '#{old_disable_lockfile_path}'; unable to determine " +
                             "whether an existing agent is running or not.  If not, please remove or rename the file in order to " +
                             "enable a new agent run.")
      end
    end

  end
  private :handle_old_lockfile


end
